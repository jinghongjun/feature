排序算法

      排序是将一组数据按照一定的规则进行排序的，一般按递增或递减的顺序来进行排序。
      常见的排序算法：
                    1.基本的排序算法：
                                  1)交换排序:冒泡排序法和快速排序法
                                  2)选择排序:选择排序法和堆排序法
                                  3)插入排序:插入排序法和Shell排序法
                                  4)合并排序
                    2.多路归并排序法
                    
      每一种排序算法都有其各种的特点，往往在某些特点的场合具有比较好的执行效率。因此，读者需要根据实际问题的需要来合理选择排序算法

1.冒泡排序法
      冒泡排序法的思路就是交换排序，通过相邻数据的交换来达到排序的目的。
      
      排序流程：
             （1）对数组中的各数据，依次比较相邻的两个元素的大小。
             （2）如果前面的数据大于后面的数据，就交换这两个数据。经过第一轮的多次比较排序后，便可把最小的数据排号
             （3）再用同样的方法把剩下的数据逐个进行比较，最后便可按照从小到大的顺序排好数组各数据的顺序
             
      冒泡排序算法在对N个数据进行排序时，无论原有数据有无顺序，都需要进行N-1步的中间排序。
             
2.选择排序法
     选择排序算法在每一步中选取最小值来重新排序，从而达到排序的目的。
     
     排序流程：
              （1）首先从原始数组中选择最小的1个数据，将其和位于第1个位置的数据交换
              （2）接着从剩下的n-1个数据中选择次小的1个元素，将其和第2个位置的数据交换。
              （3）然后，这样不断重复，直到最后两个数据完成交换。
            
     选择排序算法在对N个数据进行排序时，无论原数据有无顺序，都需要进行N-1步的中间排序。

3.插入排序法
     插入排序法通过对未排序的数据执行逐个插入至合适的位置而完成排序工作。
     
     排序流程：
              （1）首先对数组的前两个数据进行从小到大的排序
              （2）接着将第3个数据与排好序的两个数据比较，将第3个数据插入到合适的位置
              （3）然后，将第4个数据插入到已排好序的前3个数据中
              （4）不断重复上述过程，直到最后一个数据插入合适的位置。
     
     插入排序算法在对N个数据进行排序时，无论原数据有无顺序，都需要进行N-1步的中间排序
            
4.Shell排序法
     前面介绍的冒泡排序算法、选择排序算法和插入排序算法，虽然思路比较直观，但是排序的效率比较底，对于大量的数据需要排序的时候，往往
需要寻求其他更为高效的排序算法。

     排序流程：
              （1）将有n个元素的数组分成n/2个数字序列，第一个数据和第n/2+1个数据为一对，......
              （2）一次循环使每一个序列对排好顺序
              （3）然后，再变为n/4个序列，再次排序
              （4）不断重复上述过程，随着序列减少最后变为一个，也就完成了整个排序
            
5.快速排序法
     快速排序法和冒泡排序算法类似，都是基于交换排序思想。快速排序对冒泡排序法进行了改进，从而具有更高的执行效率。
     
     排序流程：
              （1）首相设定一个分界值，通过该分界值将数组分成左右两部分
              （2）将大于等于分界值的数据集中到数组右边，小于分界值的数据集中到数组的左边。此时，左边部分中各元素都小于等于分界值，
     而右边部分中各元素都大于等于分界值。
              （3）然后，左边和右边的数据可以独立排序。对于左侧的数组数据，又可以取一个分界值，将该部分数据分成左右两部分，同样将
     左边放置较小值，右边放置较大值。右侧的数组数据也可以做类似处理
               (4)重复上述过程，可以看出，这是一个递归定义，通过递归将左侧部分排好序后，再递归排好右侧部分的顺序。当左、右两个部分
     各数据排序完成后，整个数组的排序也就完成了。
     
6.堆排序法
     堆排序法是基于选择排序思想的，其利用堆结构和二叉树的一些性质来完成数据的排序。
     堆结构：堆结构是一种树结构，准确地说是一个完全二叉树。在这个数中每个结点对应于原始数据的一个记录，并且每个结点应满足以下条件：
            如果按照从小到大的顺序排序，要求非叶结点的数据要大于或等于其左、右子结点的数据
            如果按照从大到小的顺序排序，要求非叶结点的数据要小于或等于其左、右子结点的数据
     堆排序过程
        一个完整的堆排序需要经过反复的两个步骤：构造堆结构和堆排序输出。
            构造堆结构就是把原始的无序数据按前面堆结构的定义进行调整。首先，需要将原始的无序数据放置到一个完全二叉树的各个结点中，
        这可以按照前面介绍的方法来实现。
            然后，由完全二叉树的下层逐层进行父子结点的数据进行比较，使父结点的数据大于子结点的数据。这里需要使用筛运算进行结点数
        据的调整，直到使所有结点最后满足堆结构的条件为止，筛运算主要针对非叶结点进行调整。
        
7.合并排序法
     合并排序法就是将多个有序数据表合并成一个有序数据表，如果参与合并的只有两个有序表，那么成为二路合并。
     一个待排序的原始数据序列进行合并排序的基本思路是，首先将含有n个结点的待排序数据序列看做有n个长度为1的有序子表组成，将他们依次两两
合并，得到长度为2的若干有序子表，然后，再对这些子表进行两两合并，得到长度为4的若干有序子表，重复上述过程，一直重复得到最后的子表长度为n
，从而完成排序过程。

排序算法的效率
   排序算法有很多种，每种算法都有其优缺点，可适应不同场合。
   一般来说，可以从以下几个方面判断一个排序算法的优lv;
         计算的复杂度：为了全面考虑，往往从最差、平均和最好三种情况进行评价
         系统资源的占用：主要包括内存以及其他资源的占用。
   对于计算的复杂度，一般依据排序数量的大小h来度量，主要表征了算法执行速度。
         冒泡排序法，平均速度为O(n2),最坏情况下的速度为O(n2);
         快速排序法，平均速度为O(nlogn),最坏情况下的速度为O(n2);
         选择排序法，平均速度为O(n2),最坏情况下的速度为O(n2);
         堆排序法，平均速度为O(nlogn)，最坏情况下的速度为O(nlogn)；
         插入排序法，平均速度为O(n2),最坏情况下的速度为O(n2);
         Shell排序法，平均速度为O(n3/2),最坏情况下的速度为O(n2);
         合并排序法，平均速度为O(nlogn)，最坏情况下的速度为O(nlogn)；
         
   冒泡排序法、插入排序法和合并排序法都是稳定的排序算法，而选择排序法、Shell排序法、快速排序法和堆排序法都不是稳定的排序算法。
   在实际应用中，需要根据实际的问题来选择合适排序算法，如果数据量n较小的时候，可采用插入排序法或选择排序法；当数据量n较大时候，则应
采用复杂度为O(nlognde)的排序方法，如快速排序，堆排序或合并排序。如果待排序的原始数据程随机分布，那么快速排序算法的平均时间最短。
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            